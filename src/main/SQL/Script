criação da tabela usuario
       CREATE TABLE usuario (
           id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
           nome VARCHAR(255),
           email VARCHAR(255) UNIQUE NOT NULL,
           senha VARCHAR(255) NOT NULL,
           cpf CHAR(11) UNIQUE NOT NULL,
           grupo VARCHAR(255),
           ativo BOOLEAN,
           CHAVE_AES VARCHAR(500)
       );

       ALTER TABLE USUARIO
       ADD COLUMN CHAVE_AES VARCHAR(500);

       CREATE TABLE Tenis (
           id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
           nome VARCHAR(200) NOT NULL,
           avaliacao DECIMAL(2,1) CHECK (avaliacao BETWEEN 1 AND 5),
           descricao TEXT NOT NULL,
           preco DECIMAL(10, 2) NOT NULL,
           estoque INT NOT NULL,
           ativo BOOLEAN NOT NULL DEFAULT TRUE
       );

       CREATE TABLE ImagemTenis (
           id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
           tenis_id INT NOT NULL,
           caminho VARCHAR(255) NOT NULL, -- Caminho da imagem no sistema
           principal BOOLEAN DEFAULT FALSE, -- Define se a imagem é a principal
           FOREIGN KEY (tenis_id) REFERENCES Tenis(id) ON DELETE CASCADE
       );

      -- Criando a tabela cliente
      CREATE TABLE cliente (
          id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
          genero VARCHAR(255),
          datanascimento DATE,
          nome VARCHAR(255),
          email VARCHAR(255),
          senha VARCHAR(255),
          cpf CHAR(11),
          chaveaes VARCHAR(500)
      );

      -- Criando a tabela de endereço com o cliente_id como coluna
      CREATE TABLE endereco (
          id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
          cliente_id INT,
          cep VARCHAR(255),
          logradouro VARCHAR(255),
          numero VARCHAR(5),
          bairro VARCHAR(255),
          cidade VARCHAR(255),
          uf VARCHAR(2),
          FOREIGN KEY (cliente_id) REFERENCES cliente(id)
      );


       CREATE TABLE Carrinho (
           id INT PRIMARY KEY AUTO_INCREMENT,
           cliente_id INT ,
           tenis_id INT ,
           quantidade INT ,
           FOREIGN KEY (cliente_id) REFERENCES Cliente(id) ON DELETE CASCADE,
           FOREIGN KEY (tenis_id) REFERENCES Tenis(id) ON DELETE CASCADE
       );



CREATE TABLE Pedido (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    cliente_id INT NOT NULL,
    data_pedido DATETIME ,
    status VARCHAR(50) ,
    valor_total DECIMAL(10, 2) ,
    endereco_entrega_id INT,
    FOREIGN KEY (cliente_id) REFERENCES Cliente(id) ON DELETE CASCADE,
    FOREIGN KEY (endereco_entrega_id) REFERENCES Endereco(id)
);


CREATE TABLE PedidoItem (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    pedido_id INT NOT NULL,
    tenis_id INT NOT NULL,
    quantidade INT ,
    preco_unitario DECIMAL(10, 2),
    FOREIGN KEY (pedido_id) REFERENCES Pedido(id) ON DELETE CASCADE,
    FOREIGN KEY (tenis_id) REFERENCES Tenis(id) ON DELETE CASCADE
);
